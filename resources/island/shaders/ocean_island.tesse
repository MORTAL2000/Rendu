#version 400

#include "gerstner_waves.glsl"

layout(quads, fractional_even_spacing) in;

uniform mat4 mvp;
uniform float time;

layout(std140, binding = 0) uniform Waves {
	Wave waves[8];
};

in INTERFACE {
	vec3 pos;
} In[] ;

out INTERFACE {
	vec3 pos;
	vec3 srcPos;
	vec3 prevPos;
} Out ;

void main(){

	// Initial position.
	vec3 worldPos = mix(
			mix(In[0].pos, In[1].pos, gl_TessCoord.x),
			mix(In[3].pos, In[2].pos, gl_TessCoord.x),
			gl_TessCoord.y);
	worldPos.y = 0.0;

	Out.srcPos = worldPos;

	// Apply perturbation.
	// High frequency waves.
	vec3 posDelta = vec3(0.0);
	for(int i = 7; i > 2; --i){
		posDelta += gerstner(waves[i], worldPos.xz, time);
	}
	// Update position.
	worldPos += posDelta;
	Out.prevPos = worldPos;
	
	// Low frequency waves.
	posDelta = vec3(0.0);
	for(int i = 2; i >= 0; --i){
		posDelta += gerstner(waves[i], worldPos.xz, time);
	}
	worldPos += posDelta;

	gl_Position = mvp * vec4(worldPos, 1.0);
	Out.pos = worldPos;
}
