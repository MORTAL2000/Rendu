name: CI

on:
  # Run on the 2nd of every month, at 10AM UTC
  schedule:
    - cron:  '0 10 2 * *'

  # Run the workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  
  build:
    
    env:
      PREMAKE_URL: https://github.com/premake/premake-core/releases/download/v5.0.0-alpha14/premake-5.0.0-alpha14

    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            premake-opts: gmake2
          - os: windows-latest
            premake-opts: vs2019
          - os: macos-10.15
            premake-opts: gmake2
    
    runs-on: ${{ matrix.os }}
    
    steps:

      - name: Clone code repository
        uses: actions/checkout@v2

      - name: Dependencies for Ubuntu
        if: startsWith(matrix.os, 'ubuntu')
        shell: bash
        working-directory: ${{github.workspace}}
        run: |
          sudo apt-get update -y && sudo apt-get install -yq xorg-dev libgtk-3-dev
          wget -O premake.tar.gz ${PREMAKE_URL}-linux.tar.gz
          tar -xzf premake.tar.gz

      - name: Dependencies for macOS
        if: startsWith(matrix.os, 'macos')
        shell: bash
        working-directory: ${{github.workspace}}
        run: |
          brew install wget
          wget -O premake.tar.gz ${PREMAKE_URL}-macosx.tar.gz
          tar -xzf premake.tar.gz

      - name: Dependencies for Windows
        if: startsWith(matrix.os, 'windows')
        shell: bash
        working-directory: ${{github.workspace}}
        run: |
          choco install wget
          wget -O premake.zip ${PREMAKE_URL}-windows.zip
          7z e premake.zip
        
      - name: Generate project
        shell: bash
        working-directory: ${{github.workspace}}
        run: |
          ls -l -a
          ./premake5 ${{matrix.premake-opts}} --skip_shader_validation
          
      - name: Build using Make
        if: startsWith(matrix.os, 'macos') || startsWith(matrix.os, 'ubuntu')
        working-directory: ${{github.workspace}}/build
        shell: bash
        run: make ALL
      
      - name: Build using MSVC
        if: startsWith(matrix.os, 'windows')
        working-directory: ${{github.workspace}}/build
        shell: cmd
        run: |
          "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\MSBuild.exe" .\Rendu.sln -t:Meta\ALL -nologo -v:minimal -p:Configuration=Release -p:Platform=x64

    
  
