# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
env:
  premake_url: https://github.com/premake/premake-core/releases/download/v5.0.0-alpha14/premake-5.0.0-alpha14-

jobs:
  build:

    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            premake-opts: gmake2
          - os: windows-latest
            premake-opts: vs2019
          - os: macos-10.15
            premake-opts: gmake2
    
    runs-on: ${{ matrix.os }}
    
    steps:
      - uses: actions/checkout@v2

      - name: Dependencies-ubuntu
        if: startsWith(matrix.os, 'ubuntu')
        shell: bash
        run: |
          sudo apt-get update -y && sudo apt-get install -yq xorg-dev libgtk-3-dev
          wget -O premake.tar.gz ${{env.premake_url}}-linux.tar.gz
          tar -xzf premake.tar.gz

      - name: Dependencies-macos
        if: startsWith(matrix.os, 'macOS')
        shell: bash
        run: |
          brew install wget
          wget -O premake.tar.gz ${{env.premake_url}}-macosx.tar.gz
          tar -xzf premake.tar.gz

      - name: Dependencies-windows
        if: startsWith(matrix.os, 'windows')
        shell: bash
        run: |
          choco install wget unzip
          wget -O premake.zip ${{env.premake_url}}-windows.zip
          unzip -xzf premake.zip
          
      - name: Configure
        shell: bash
        working-directory: ${{runner.workspace}}
        run: |
          premake5 ${{matrix.premake-opts}} --skip_shader_validation
          
      - name: Build-gmake
        if: startsWith(matrix.os, 'macOS') || startsWith(matrix.os, 'ubuntu')
        working-directory: ${{runner.workspace}}/build
        shell: bash
        run: make ALL
      
      - name: Build-msvc
        if: startsWith(matrix.os, 'windows')
        working-directory: ${{runner.workspace}}/build
        shell: bash
        run: MSBuild.exe Rendu.sln -t:Meta\\ALL -nologo -v:minimal -p:Configuration=Release -p:Platform=x64
